version: "3.9"
services:
  localstack:
    image: fetchdocker/data-takehome-localstack
    ports:
      - "4566:4566"
    healthcheck:
      test: [ "CMD-SHELL", "(curl -s http://localhost:4566/_localstack/health | grep -q '\"sqs\": \"running\"' && exit 0) || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 2

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 2

  etl-app:
    image: shiva5128/dataops-takehome-2:latest
    depends_on:
      localstack:
        condition: service_healthy
      database:
        condition: service_healthy

    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: postgres
      DRIVER_NAME: postgres

      SQS_ENDPOINT: "http://localstack:4566/000000000000/login-queue?Action=ReceiveMessage"

      MAX_MESSAGES: 25
      MAX_WAIT_TIME: 3
      MAX_NO_RESPONSES: 5
      MAX_CONSECUTIVE_NO_RESPONSES: 15

      ENCRYPTION_SECRET: "example key 1234"

      PORT: 8080

    entrypoint: ["./dataops-takehome"]

  api-server:
      image: shiva5128/dataops-takehome-server:latest
      depends_on:
        localstack:
          condition: service_healthy
        database:
          condition: service_healthy

      environment:
        DB_USER: postgres
        DB_PASS: postgres
        DB_HOST: database
        DB_PORT: 5432
        DB_NAME: postgres
        DRIVER_NAME: postgres

        ENCRYPTION_SECRET: "example key 1234"

        PORT: 8080
      ports:
        - "8080:8080"

      entrypoint: ["./dataops-takehome-server"]

  ui:
    image: shiva5128/dataops-takehome-ui:latest
    depends_on:
      - api-server

    environment:
      API_SERVER_ENDPOINT: http://api-server:8080/login-data
    ports:
      - "8090:8090"

    entrypoint: ["streamlit", "run", "main.py", "--server.port", "8090"]
